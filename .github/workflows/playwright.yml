name: ðŸ§ª Playwright E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Download history
        run: |
          base_url="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          mkdir -p allure-results/history
          curl -f -s "$base_url/history.zip" -o history.zip && unzip -o history.zip -d allure-results/ || echo "No history found"

      - name: Run tests
        run: npm run test:bdd

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            allure-results/
            test-results/

  report:
    name: Generate Report
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-results

      - name: Setup Allure
        run: |
          curl -o allure.tgz -Ls https://github.com/allure-framework/allure2/releases/download/2.24.0/allure-2.24.0.tgz
          tar -zxf allure.tgz
          sudo mv allure-2.24.0 /opt/allure
          echo "/opt/allure/bin" >> $GITHUB_PATH

      - name: Generate report
        run: |
          mkdir -p deploy
          allure generate allure-results -o deploy --clean
          
      - name: Setup authentication
        env:
          ACCESS_CODE: ${{ secrets.ACCESS_CODE || 'BK@123' }}
        run: |
          chmod +x auth/deploy.sh
          ./auth/deploy.sh

      - name: Create history archive
        run: |
          # Archive current history for next run
          zip -r deploy/history.zip deploy/history/ 2>/dev/null || true

      - name: Deploy to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./deploy

  deploy:
    name: Deploy Pages
    runs-on: ubuntu-latest
    needs: report
    if: always() && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4